// mixins

// border-box
@mixin border-box {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}

// border-radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

// element size
@mixin size($width, $height) {
	width: $width;
	height: $height;
}
/*
 *  Set a rem font size with pixel fallback
 */
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}
// rem font-size
@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

// img-responsive
@mixin img-responsive {
  width: auto;
  max-width: 100%;
  height: auto !important;
}

/*
 *  Cross broser opacity
 *  This mixin ensures cross browser opacity all the way down to Internet Explorer 5. 
 *  Though if you have to optomize for IE5, you have a lot bigger problems than opacity, godspeed my friend.
 */
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

/*
 *  Clearfix
 *  There’s a lot of different clearfix hacks out there on the web. 
 *  This one is created by (Nicolas Gallagher) and I’ve found it to be the most solid one. Works in IE6 and up.
 */
%clearfix {
  *zoom: 1;
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

/*
 *  SVG background images with PNG and retina fallback
 *
 *  This mixin depends on Modernizr and creates a bit more work for you when creating images for your site, 
 *  but it’s really worth it in the end.
 *  You need one .svg file, that will serve as the default background image. 
 *  You’ll also need a regular .png that serves as a fallback for non-svg-supporting browsers. 
 *  And last you need a twice as large .png as a second fallback to retina screens. 
 *  All in all you need this:
 *
 *  - pattern.svg, 
 *  - pattern.png, 
 *  - pattern@2x.png
 *
 *  Usage
 *  body {
 *    @include background-image('pattern');
 *  }
 */
$image-path: '../images' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false) {
  background-image: url(#{$image-path}/#{$name}.svg);
  @if($size) {
    background-size: $size;
  }
  .no-svg &{
    background-image: url(#{$image-path/}#{$name}.#{$fallback-extension});

    @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
      background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
    }
  }
}
